unset vedeactivate
unset veactivate

vedeactivate () {
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset VIRTUAL_ENV
}

veactivate () {
    if [ ! -f ./ve/bin/activate ] ; then
        if [ ! "$1" = "silent" ] ; then
            echo -e "${RED}You must run this command at the root of your a project that is powered by python virtualenv."
        fi
        vedeactivate
        return
    fi
    
    # unset irrelavent variables
    vedeactivate nondestructive
    
    VIRTUAL_ENV="$PWD/ve"
    export VIRTUAL_ENV
    
    _OLD_VIRTUAL_PATH="$PATH"
    PATH="$VIRTUAL_ENV/bin:$PATH"
    export PATH

    _OLD_VIRTUAL_PS1="$PS1"
    if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="\n\[$LIGHTPURPLE\[[`basename \`dirname \"$VIRTUAL_ENV\"\``] $PS1"
    else
        PS1="\n\[$LIGHTPURPLE\[virtualenv: `basename \`dirname \"$VIRTUAL_ENV\"\``$PS1"
    fi
    export PS1
    
    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi
}